#!/usr/bin/env bash

set -euo pipefail

install_tool() {
    local version="$2"
    local install_path="$3"
    local tmp_download_dir="$4"
    local binary_name="$5"

    local platform
    local arch_name
    local bin_install_path="${install_path}/bin"
    local binary_path="${bin_install_path}/${binary_name}"
    local download_url
    local download_path

    platform=$(get_platform)
    arch_name=$(get_arch)
    download_url=$(get_download_url "v${version}" "${platform}" "${binary_name}" "${arch_name}")
    download_path="${tmp_download_dir}/${binary_name}"

    echo "Downloading [${binary_name}] from ${download_url} to ${download_path}"
    curl -fsSL -o "${download_path}" "${download_url}"

    echo "Creating bin directory"
    mkdir -p "${bin_install_path}"

    echo "Cleaning previous binaries"
    rm -f "${binary_path}" 2>/dev/null || true

    echo "Copying binary"
    cp "${tmp_download_dir}/${binary_name}" "${binary_path}"
    chmod +x "${binary_path}"
}

numeric_version() {
    echo "$@" | awk -F. '{ printf("%d%03d%03d%03d\n", $1,$2,$3,$4); }'
}

get_platform() {
    uname | tr '[:upper:]' '[:lower:]'
}

get_arch() {
    local arch
    if [ "$(uname -m)" = "x86_64" ]; then
        arch="amd64"
    elif [ "$(uname -m)" = "aarch64" ]; then
        arch="arm"
    elif [ "$(uname -m)" = "arm64" ]; then
        arch="arm64"
    else
        arch="386"
    fi

    echo "${arch}"
}

get_filename() {
    local binary_name="$1"
    local platform="$2"
    local arch_name="$3"
    local version="$4"

    local install_numeric_version
    install_numeric_version=$(numeric_version "${version}")

    if [ "${install_numeric_version}" -lt "$(numeric_version 0.4.0)" ]; then
        # XXX: The keyword "alpha" is removed in v0.4.0 or later
        # See also) https://github.com/goss-org/goss/releases/tag/v0.4.0
        case $platform in
            # XXX: The keyword "alpha" is tentative
            # See also) https://github.com/raimon49/asdf-goss/pull/1
            darwin | windows) binary_name="${binary_name}-alpha";;
        esac
    fi

    echo "${binary_name}-${platform}-${arch_name}"
}

get_download_url() {
    local version="$1"
    local platform="$2"
    local binary_name="$3"
    local arch_name="$4"
    local filename
    filename="$(get_filename "${binary_name}" "${platform}" "${arch_name}" "${version}")"

    local github_repo="goss-org/goss"

    echo "https://github.com/${github_repo}/releases/download/${version}/${filename}"
}

tmp_download_dir="$(mktemp -d -t 'asdf_XXXXXXXX')"
trap 'rm -rf "${tmp_download_dir}"' EXIT
install_tool "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH" "$tmp_download_dir" goss

# vim:fenc=utf-8 ff=unix ft=bash ts=4 sw=4 sts=4 si et
